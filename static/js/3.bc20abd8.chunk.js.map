{"version":3,"sources":["components/PopularMovies/index.tsx","containers/Home/index.tsx"],"names":["PopularMovies","format","newDate","movie","useStores","apiStore","genreTv","genreMovie","urlImage","poster_path","backdrop_path","date","release_date","first_air_date","to","media_type","id","className","style","backgroundImage","vote_average","Box","position","display","CircularProgress","variant","value","name","title","genre_ids","map","idTv","tv","getGenreTv","slice","idMovie","mv","getGenreMovie","Home","movies","currentPage","totalPages","handleChange","Pagination","count","page","onChange","shape"],"mappings":"wQAgIeA,MApGf,YAA0C,IAAD,IAmCjBC,EAxBFC,EAXGC,EAAgB,EAAhBA,MACvB,EAEIC,cADFC,SAAYC,EADd,EACcA,QAASC,EADvB,EACuBA,WAGjBC,EAAQ,yCACZL,EAAMM,aAAeN,EAAMO,eAGvBC,EAAOR,EAAMS,cAAgBT,EAAMU,eA8BzC,OACE,cAAC,IAAD,CACEC,GAAE,WAAMX,EAAMY,WAAZ,YAA0BZ,EAAMa,IAClCC,UAAU,kBACVC,MAAO,CACLC,gBAAgB,OAAD,OACbhB,EAAMM,YACFD,EACA,yEAHS,MAJnB,SAWE,sBAAKS,UAAU,OAAf,UACGd,EAAMiB,aAAe,GACpB,qBAAKH,UAAU,MAAf,SAEI,eAACI,EAAA,EAAD,CAAKC,SAAS,WAAWC,QAAQ,cAAjC,UACE,cAACC,EAAA,EAAD,CACEP,UAAU,WACVQ,QAAQ,cACRC,MAAO,MAET,cAACF,EAAA,EAAD,CACEP,UAAU,aACVQ,QAAQ,cACRC,MAA4B,GAArBvB,EAAMiB,eAEf,cAACC,EAAA,EAAD,CAAKJ,UAAU,aAAf,SACE,+BAAOd,EAAMiB,sBAMvB,sBAAKH,UAAU,WAAf,UACE,sBAAMA,UAAU,QAAhB,SAAyBd,EAAMwB,MAAQxB,EAAMyB,QAC7C,qBAAKX,UAAU,SAAf,SACwB,OAArBd,EAAMY,WAAN,UACGZ,EAAM0B,iBADT,aACG,EACIC,KAAI,SAACC,GAAD,OAAUzB,EAAQwB,KAAI,SAACE,GAAD,OA/D5C,SAAoBD,EAAcC,GAChC,OACED,IAASC,EAAGhB,IACV,sBAAMC,UAAU,QAAhB,SACGe,EAAGL,MADuBK,EAAGhB,IA4DciB,CAAWF,EAAMC,SACpDE,MAAM,EAAG,GAHf,UAIG/B,EAAM0B,iBAJT,aAIG,EACIC,KAAI,SAACK,GAAD,OACJ5B,EAAWuB,KAAI,SAACM,GAAD,OAzDjC,SAAuBD,EAAiBC,GACtC,OACED,IAAYC,EAAGpB,IACb,sBAAMC,UAAU,QAAhB,SACGmB,EAAGT,MADuBS,EAAGpB,IAsDGqB,CAAcF,EAASC,SAE/CF,MAAM,EAAG,QAGpB,sBAAKjB,UAAU,mBAAf,UACE,qBAAKA,UAAU,YAAf,SACG,+BAAON,IA9EET,EA8EiBS,EA7E5BT,EAAQgC,MAAM,EAAG,QA+ElB,qBAAKjB,UAAU,YAAf,SACG,gCAzDWhB,EAyDSE,EAAMY,WAxDjB,OAAXd,EAAkB,WAAU,sB,OCzDhC,SAASqC,IACd,MAEIlC,cADFC,SAAYkC,EADd,EACcA,OAAQC,EADtB,EACsBA,YAAaC,EADnC,EACmCA,WAAYC,EAD/C,EAC+CA,aAG/C,OACE,qBAAKzB,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,SAAf,SACGsB,EAAOT,KAAI,SAAC3B,GAAD,OACV,cAAC,EAAD,CAA8BA,MAAOA,GAAjBA,EAAMa,SAG9B,cAAC2B,EAAA,EAAD,CACE1B,UAAU,aACV2B,MAAOH,EACPI,KAAML,EACNM,SAAUJ,EACVjB,QAAQ,WACRsB,MAAM","file":"static/js/3.bc20abd8.chunk.js","sourcesContent":["import { Box, CircularProgress } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStores } from \"../../stores\";\r\nimport \"./style.scss\";\r\n\r\ninterface Movie {\r\n  movie: Props;\r\n}\r\n\r\ninterface Props {\r\n  id: number;\r\n  first_air_date: string;\r\n  release_date: string;\r\n  name: string;\r\n  title: string;\r\n  poster_path: string;\r\n  backdrop_path: string;\r\n  media_type: string;\r\n  vote_average: number;\r\n  genre_ids?: number[];\r\n}\r\n\r\ninterface ProductGenre {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nfunction PopularMovies({ movie }: Movie) {\r\n  const {\r\n    apiStore: { genreTv, genreMovie },\r\n  } = useStores();\r\n\r\n  const urlImage = `https://image.tmdb.org/t/p/w500${\r\n    movie.poster_path || movie.backdrop_path\r\n  }`;\r\n\r\n  const date = movie.release_date || movie.first_air_date;\r\n\r\n  function formatyear(newDate: string) {\r\n    return newDate.slice(0, 4);\r\n  }\r\n\r\n  function getGenreTv(idTv: number, tv: ProductGenre) {\r\n    return (\r\n      idTv === tv.id && (\r\n        <span className=\"genre\" key={tv.id}>\r\n          {tv.name}\r\n        </span>\r\n      )\r\n    );\r\n  }\r\n\r\n  function getGenreMovie(idMovie: number, mv: ProductGenre) {\r\n    return (\r\n      idMovie === mv.id && (\r\n        <span className=\"genre\" key={mv.id}>\r\n          {mv.name}\r\n        </span>\r\n      )\r\n    );\r\n  }\r\n\r\n  function handleFormat(format: string) {\r\n    return format === \"tv\" ? \"SÃ©rie\" : \"Filme\";\r\n  }\r\n\r\n  return (\r\n    <Link\r\n      to={`/${movie.media_type}/${movie.id}`}\r\n      className=\"container-movie\"\r\n      style={{\r\n        backgroundImage: `url(${\r\n          movie.poster_path\r\n            ? urlImage\r\n            : \"https://www.brdtex.com/wp-content/uploads/2019/09/no-image-480x480.png\"\r\n        })`,\r\n      }}\r\n    >\r\n      <div className=\"info\">\r\n        {movie.vote_average > 0 && (\r\n          <div className=\"box\">\r\n            {\r\n              <Box position=\"relative\" display=\"inline-flex\">\r\n                <CircularProgress\r\n                  className=\"progress\"\r\n                  variant=\"determinate\"\r\n                  value={100}\r\n                />\r\n                <CircularProgress\r\n                  className=\"progressBg\"\r\n                  variant=\"determinate\"\r\n                  value={movie.vote_average * 10}\r\n                />\r\n                <Box className=\"boxWrapper\">\r\n                  <span>{movie.vote_average}</span>\r\n                </Box>\r\n              </Box>\r\n            }\r\n          </div>\r\n        )}\r\n        <div className=\"mainInfo\">\r\n          <span className=\"title\">{movie.name || movie.title}</span>\r\n          <div className=\"genres\">\r\n            {movie.media_type === \"tv\"\r\n              ? movie.genre_ids\r\n                  ?.map((idTv) => genreTv.map((tv) => getGenreTv(idTv, tv)))\r\n                  .slice(0, 2)\r\n              : movie.genre_ids\r\n                  ?.map((idMovie) =>\r\n                    genreMovie.map((mv) => getGenreMovie(idMovie, mv))\r\n                  )\r\n                  .slice(0, 2)}\r\n          </div>\r\n        </div>\r\n        <div className=\"infoHoverWrapper\">\r\n          <div className=\"infoHover\">\r\n            {<span>{date && formatyear(date)}</span>}\r\n          </div>\r\n          <div className=\"infoHover\">\r\n            {<span>{handleFormat(movie.media_type)}</span>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default PopularMovies;\r\n","/* eslint-disable import/order */\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport React from \"react\";\r\nimport PopularMovies from \"../../components/PopularMovies\";\r\nimport { useStores } from \"../../stores\";\r\nimport \"./style.scss\";\r\n\r\nexport function Home() {\r\n  const {\r\n    apiStore: { movies, currentPage, totalPages, handleChange },\r\n  } = useStores();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"home\">\r\n        <div className=\"movies\">\r\n          {movies.map((movie) => (\r\n            <PopularMovies key={movie.id} movie={movie} />\r\n          ))}\r\n        </div>\r\n        <Pagination\r\n          className=\"pagination\"\r\n          count={totalPages}\r\n          page={currentPage}\r\n          onChange={handleChange}\r\n          variant=\"outlined\"\r\n          shape=\"rounded\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}