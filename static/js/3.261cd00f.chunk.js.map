{"version":3,"sources":["components/PopularMovies/index.tsx","containers/Home/index.tsx"],"names":["PopularMovies","format","newDate","movie","useStores","apiStore","genreTv","genreMovie","useState","hover","setHover","urlImage","poster_path","backdrop_path","date","release_date","first_air_date","to","media_type","id","className","onMouseMove","onMouseLeave","style","backgroundImage","vote_average","Box","position","display","CircularProgress","variant","value","name","title","genre_ids","map","idTv","tv","getGenreTv","slice","idMovie","mv","getGenreMovie","Home","movies","currentPage","totalPages","handleChange","Pagination","count","page","onChange","shape"],"mappings":"gRA8GeA,MAlFf,YAA0C,IAAD,IAmCjBC,EAxBFC,EAXGC,EAAgB,EAAhBA,MAAgB,EAGnCC,cADFC,SAAYC,EAFyB,EAEzBA,QAASC,EAFgB,EAEhBA,WAFgB,EAKbC,oBAAS,GALI,mBAKhCC,EALgC,KAKzBC,EALyB,KAOjCC,EAAQ,yCAAqCR,EAAMS,aAAeT,EAAMU,eAExEC,EAAOX,EAAMY,cAAgBZ,EAAMa,eA8BzC,OACE,cAAC,IAAD,CACEC,GAAE,WAAMd,EAAMe,WAAZ,YAA0Bf,EAAMgB,IAClCC,UAAU,kBACVC,YAAa,kBAAMX,GAAS,IAC5BY,aAAc,kBAAMZ,GAAS,IAC7Ba,MAAO,CACLC,gBAAgB,OAAD,OACbrB,EAAMS,YAAcD,EAAW,yEADlB,MANnB,SAWE,sBAAKS,UAAU,OAAf,UACGjB,EAAMsB,aAAe,GACpB,qBAAKL,UAAU,MAAf,SACGX,GACC,eAACiB,EAAA,EAAD,CAAKC,SAAS,WAAWC,QAAQ,cAAjC,UACE,cAACC,EAAA,EAAD,CAAkBT,UAAU,WAAWU,QAAQ,cAAcC,MAAO,MACpE,cAACF,EAAA,EAAD,CAAkBT,UAAU,aAAaU,QAAQ,cAAcC,MAA4B,GAArB5B,EAAMsB,eAC5E,cAACC,EAAA,EAAD,CAAKN,UAAU,aAAf,SACE,+BAAOjB,EAAMsB,sBAMvB,sBAAKL,UAAU,WAAf,UACE,sBAAMA,UAAU,QAAhB,SAAyBjB,EAAM6B,MAAQ7B,EAAM8B,QAC7C,qBAAKb,UAAU,SAAf,SACwB,OAArBjB,EAAMe,WAAN,UACGf,EAAM+B,iBADT,aACG,EAAiBC,KAAI,SAAAC,GAAI,OAAI9B,EAAQ6B,KAAI,SAAAE,GAAE,OAtDzD,SAAoBD,EAAcC,GAChC,OACED,IAASC,EAAGlB,IACV,sBAAMC,UAAU,QAAhB,SACGiB,EAAGL,MADuBK,EAAGlB,IAmDuBmB,CAAWF,EAAMC,SAAME,MAAM,EAAG,GADlF,UAEGpC,EAAM+B,iBAFT,aAEG,EAAiBC,KAAI,SAAAK,GAAO,OAAIjC,EAAW4B,KAAI,SAAAM,GAAE,OA7C/D,SAAuBD,EAAiBC,GACtC,OACED,IAAYC,EAAGtB,IACb,sBAAMC,UAAU,QAAhB,SACGqB,EAAGT,MADuBS,EAAGtB,IA0C6BuB,CAAcF,EAASC,SAAMF,MAAM,EAAG,QAGnG,sBAAKnB,UAAU,mBAAf,UACE,qBAAKA,UAAU,YAAf,SAA4BX,GAAS,+BAAOK,IA/DhCZ,EA+DmDY,EA9D9DZ,EAAQqC,MAAM,EAAG,QA+DlB,qBAAKnB,UAAU,YAAf,SAA4BX,GAAS,gCAxCvBR,EAwC2CE,EAAMe,WAvCnD,OAAXjB,EAAkB,WAAU,sB,OCzDhC,SAAS0C,IAAQ,IAAD,EAGjBvC,cADFC,SAAYuC,EAFO,EAEPA,OAAQC,EAFD,EAECA,YAAaC,EAFd,EAEcA,WAAYC,EAF1B,EAE0BA,aAG/C,OACE,qBAAK3B,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,SAAf,SACGwB,EAAOT,KAAI,SAAAhC,GAAK,OACf,cAAC,EAAD,CAA8BA,MAAOA,GAAjBA,EAAMgB,SAG9B,cAAC6B,EAAA,EAAD,CACE5B,UAAU,aACV6B,MAAOH,EACPI,KAAML,EACNM,SAAUJ,EACVjB,QAAQ,WACRsB,MAAM","file":"static/js/3.261cd00f.chunk.js","sourcesContent":["import { Box, CircularProgress } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStores } from \"../../stores\";\r\nimport \"./style.scss\";\r\n\r\ninterface Movie {\r\n  movie: Props;\r\n}\r\n\r\ninterface Props {\r\n  id: number;\r\n  first_air_date: string;\r\n  release_date: string;\r\n  name: string;\r\n  title: string;\r\n  poster_path: string;\r\n  backdrop_path: string;\r\n  media_type: string;\r\n  vote_average: number;\r\n  genre_ids?: number[];\r\n}\r\n\r\ninterface ProductGenre {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nfunction PopularMovies({ movie }: Movie) {\r\n  const {\r\n    apiStore: { genreTv, genreMovie },\r\n  } = useStores();\r\n\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const urlImage = `https://image.tmdb.org/t/p/w500${movie.poster_path || movie.backdrop_path}`;\r\n\r\n  const date = movie.release_date || movie.first_air_date;\r\n\r\n  function formatyear(newDate: string) {\r\n    return newDate.slice(0, 4);\r\n  }\r\n\r\n  function getGenreTv(idTv: number, tv: ProductGenre) {\r\n    return (\r\n      idTv === tv.id && (\r\n        <span className=\"genre\" key={tv.id}>\r\n          {tv.name}\r\n        </span>\r\n      )\r\n    );\r\n  }\r\n\r\n  function getGenreMovie(idMovie: number, mv: ProductGenre) {\r\n    return (\r\n      idMovie === mv.id && (\r\n        <span className=\"genre\" key={mv.id}>\r\n          {mv.name}\r\n        </span>\r\n      )\r\n    );\r\n  }\r\n\r\n  function handleFormat(format: string) {\r\n    return format === \"tv\" ? \"SÃ©rie\" : \"Filme\";\r\n  }\r\n\r\n  return (\r\n    <Link\r\n      to={`/${movie.media_type}/${movie.id}`}\r\n      className=\"container-movie\"\r\n      onMouseMove={() => setHover(true)}\r\n      onMouseLeave={() => setHover(false)}\r\n      style={{\r\n        backgroundImage: `url(${\r\n          movie.poster_path ? urlImage : \"https://www.brdtex.com/wp-content/uploads/2019/09/no-image-480x480.png\"\r\n        })`\r\n      }}\r\n    >\r\n      <div className=\"info\">\r\n        {movie.vote_average > 0 && (\r\n          <div className=\"box\">\r\n            {hover && (\r\n              <Box position=\"relative\" display=\"inline-flex\">\r\n                <CircularProgress className=\"progress\" variant=\"determinate\" value={100} />\r\n                <CircularProgress className=\"progressBg\" variant=\"determinate\" value={movie.vote_average * 10} />\r\n                <Box className=\"boxWrapper\">\r\n                  <span>{movie.vote_average}</span>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </div>\r\n        )}\r\n        <div className=\"mainInfo\">\r\n          <span className=\"title\">{movie.name || movie.title}</span>\r\n          <div className=\"genres\">\r\n            {movie.media_type === \"tv\"\r\n              ? movie.genre_ids?.map(idTv => genreTv.map(tv => getGenreTv(idTv, tv))).slice(0, 2)\r\n              : movie.genre_ids?.map(idMovie => genreMovie.map(mv => getGenreMovie(idMovie, mv))).slice(0, 2)}\r\n          </div>\r\n        </div>\r\n        <div className=\"infoHoverWrapper\">\r\n          <div className=\"infoHover\">{hover && <span>{date && formatyear(date)}</span>}</div>\r\n          <div className=\"infoHover\">{hover && <span>{handleFormat(movie.media_type)}</span>}</div>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default PopularMovies;\r\n","/* eslint-disable import/order */\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport React from \"react\";\r\nimport PopularMovies from \"../../components/PopularMovies\";\r\nimport { useStores } from \"../../stores\";\r\nimport \"./style.scss\";\r\n\r\nexport function Home() {\r\n  const {\r\n    apiStore: { movies, currentPage, totalPages, handleChange },\r\n  } = useStores();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"home\">\r\n        <div className=\"movies\">\r\n          {movies.map(movie => (\r\n            <PopularMovies key={movie.id} movie={movie} />\r\n          ))}\r\n        </div>\r\n        <Pagination\r\n          className=\"pagination\"\r\n          count={totalPages}\r\n          page={currentPage}\r\n          onChange={handleChange}\r\n          variant=\"outlined\"\r\n          shape=\"rounded\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}